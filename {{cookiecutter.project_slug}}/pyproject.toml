[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}" # From cookiecutter.json (e.g., "0.1.0")
description = "{{ cookiecutter.description }}"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>"]
license = "{{ cookiecutter.license }}" # This will be the string chosen by the user
readme = "README.md"
packages = [
    { include = "{{ cookiecutter.project_slug }}", from = "src" }
]
# homepage = "TODO"
# repository = "TODO"
# documentation = "TODO"
# classifiers = [ ... ]

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"
# --- CORE DEPENDENCIES (always installed by 'poetry install') ---
numpy = ">=2.0.2"
pydantic = ">=2.11.5"
pydantic-settings = ">=2.9.1" 
python-dotenv = ">=1.1.0"
PyYAML = ">=6.0.2"
hydra-zen = ">=0.14.0"
requests = ">=2.32.3"

# --- OPTIONAL DEPENDENCY GROUPS ---

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = ">=8.2.1"

[tool.poetry.group.notebooks]
optional = true

[tool.poetry.group.notebooks.dependencies]
jupyterlab = ">=5.0.0"
ipykernel = ">=6.29.3"

[tool.poetry.group.fastapi]
optional = true # For include_fastapi

[tool.poetry.group.fastapi.dependencies]
fastapi = {version = ">=0.110.0", optional = true}
uvicorn = {version = ">=0.31.1", extras = ["standard"], optional = true}
# fastapi-limiter is listed as an optional part of the 'fastapi' group.
# If the user installs the 'fastapi' group, they will get fastapi-limiter.
# The 'include_cache' flag from cookiecutter.json will primarily inform
# the README.md instructions and potentially application logic.
fastapi-limiter = {version = ">=0.1.6", optional = true}

[tool.poetry.group.streamlit]
optional = true

[tool.poetry.group.streamlit.dependencies]
streamlit = ">=1.35.0"

[tool.poetry.group.langchain]
optional = true

[tool.poetry.group.langchain.dependencies]
langchain = ">=0.3.0"
chromadb = ">=0.6.0"
pinecone-client = ">=4.2.0"

[tool.poetry.group.openai]
optional = true

[tool.poetry.group.openai.dependencies]
openai = ">=1.35.0"

[tool.poetry.group.ollama]
optional = true

[tool.poetry.group.ollama.dependencies]
ollama = ">=0.3.0"

[tool.poetry.group.gemini]
optional = true

[tool.poetry.group.gemini.dependencies]
google-generativeai = ">=0.7.0"

[tool.poetry.group.vertex]
optional = true

[tool.poetry.group.vertex.dependencies]
google-cloud-aiplatform = ">=2.18.0"

[tool.poetry.group.db]
optional = true

[tool.poetry.group.db.dependencies]
SQLAlchemy = {version = ">=2.0.30", extras = ["asyncio"]}
psycopg2-binary = ">=2.9.9"

[tool.poetry.group.redis]
optional = true

[tool.poetry.group.redis.dependencies]
redis = {version = ">=5.0.3", extras = ["hiredis"]}

[tool.poetry.group.dockerpy]
optional = true

[tool.poetry.group.dockerpy.dependencies]
docker = ">=7.0.0"

[tool.poetry.group.kubernetespy]
optional = true

[tool.poetry.group.kubernetespy.dependencies]
kubernetes = ">=29.0.0"

[tool.poetry.group.n8nclient]
optional = true

[tool.poetry.group.n8nclient.dependencies]
n8n-client = ">=1.1.0"

[tool.poetry.group.app_logging]
optional = true

[tool.poetry.group.app_logging.dependencies]
structlog = ">=24.1.0"

[tool.poetry.group.app_monitoring]
optional = true

[tool.poetry.group.app_monitoring.dependencies]
prometheus-client = ">=0.20.0"

[tool.poetry.group.responsible_ai_tools]
optional = true # For include_responsible_ai

[tool.poetry.group.responsible_ai_tools.dependencies]
pydantic-i18n = "^0.4.5"  # <<< CORRECTED based on available version

[tool.poetry.group.data_validation_tools]
optional = true

[tool.poetry.group.data_validation_tools.dependencies]
voluptuous = ">=0.13.1"

[tool.poetry.group.cli_tools]
optional = true

[tool.poetry.group.cli_tools.dependencies]
typer = {version = ">=0.12.0", extras = ["all"], optional = true}
click = {version = ">=8.1.0", optional = true}

[tool.poetry.group.docs_tools]
optional = true

[tool.poetry.group.docs_tools.dependencies]
mkdocs = {version = ">=1.6.0", optional = true}
mkdocs-material = {version = ">=9.5.0", optional = true}
sphinx = {version = ">=7.0.0", optional = true}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"